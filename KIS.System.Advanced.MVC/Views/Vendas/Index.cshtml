
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model KIS.System.Advanced.MVC.ViewModels.VendasVM

<!-- Bootstrap core CSS -->
<link href="~/Content/bootstrap.min.css" rel="stylesheet">
<!-- Latest compiled and minified CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/css/bootstrap-select.min.css">
<link href="~/Content/vendas.css" rel="stylesheet">

<body>
    <header class="header  clearfix">
        <div class="top-nav clearfix">
            <div class="row">
                <div class="col-md-6 col-sm-6 col-xs-2">
                    <a data-toggle="tooltip" data-placement="bottom" title="" href="" data-original-title="Nova Venda">
                        <i class="icon mdi-navigation-menu"></i>
                    </a>
                </div>
            </div>
        </div>
    </header>

    <div class="container bkp-cont">
        <div class="theme-lockup">
            <h3 class="pad-top-20 text-center">Nova Venda</h3>
        </div>
        <br>
        <div class="row">
            <div class="col-md-12">
                <div class="" id="box_configs">
                    <label class="float-left mg-10 mb-10">Vendedor:</label>
                    <select id="idVendedor" class="mb-10 browser-default custom-select col-3">
                        <option selected value="0">Selecione o vendedor</option>
                        @foreach (var vendedor in Model.Vendedores)
                        {
                            <option value="@vendedor.Id">@vendedor.Nome</option>
                        }
                    </select>
                    <div class="form-group float-right">
                        <label for="exampleFormControlTextarea1">Observação Pedido</label>
                        <textarea class="form-control textarea-obs" id="obsevacaoPedido" rows="3"></textarea>
                    </div>
                    <div class="form-group mb-10 row">
                        <div class="col-sm-1" style="max-width:13.2%; margin-right: -20px !important" ;>
                            <label for="" class="mg-10 form-control-label">Cliente:</label>
                        </div>
                        <div class="">
                            <select class="form-control selectpicker" id="IdCliente" data-live-search="true">
                                <option selected value="0">Selecione o cliente</option>
                                @foreach (var cliente in Model.Clientes)
                                {
                                    <option data-tokens="@cliente.Nome" value="@cliente.Id">@cliente.Nome</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="form-group mb-10 row">

                        <div class="" style="margin-left: 15px;">
                            <label for="" class="mg-10 form-control-label">Produto:</label>
                        </div>
                        <div class="col-sm-6">
                            <select class="form-control selectpicker" id="cmbProdutos" data-live-search="true" data-size="10">
                                @foreach (var produto in Model.Produtos)
                                {
                                    <option data-tokens="@produto.NomeProduto" value="@produto.IdProduto">@produto.NomeProduto</option>
                                }
                            </select>
                        </div>
                        <div class="col-sm-3">
                            <button type="button" id="adicionarProduto" class="btn-finalizar btn btn-block">Adicionar Produto</button>
                        </div>
                    </div>
                </div>
                <br>
                <div class="tbs">
                    <table id="listaProdutos" class="col-12 tb-b tb-style table table-striped table-hover table-condensed dataTable display responsive nowrap" width="100%" style="padding-left:0px;">
                        <thead>
                            <tr class="">
                                <th width="10%">Cod. Produto</th>
                                <th width="20%">Nome do Produto</th>
                                <th width="20%">Descrição</th>
                                <th width="20%">Quantidade</th>
                                <th width="10%">Valor Unitário</th>
                                <th width="10%">Desconto Unitário</th>
                                <th width="10%">Valor</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
                <div class="">
                    <label class="float-right mg-10 mr-10">
                        <strong>Total da Compra: &nbsp;</strong>
                        <input class="mr-10 float-right wd-100 mb-10 form-control btn-disable" type="text" id="valorTotalPedido" value="R$ 0,00">
                    </label>
                    <label class="float-right mg-10 mr-10">
                        <strong>Total do Desconto: &nbsp;</strong>
                        <input class="mr-10 float-right wd-150 mb-10 form-control btn-disable" type="text" id="valorTotalDescontos" value="R$ 0,00">
                    </label>
                </div>
                <div class="form-group">
                    <form action="#" method="get">
                        <div class="col-12" style="display: flex;">
                            <span>
                                <select class="form-control" id="formaPagamento1">
                                    @foreach (var formaPagamento in Model.TipoPGs)
                                    {
                                        <option class="form-control" value="@formaPagamento.Id">@formaPagamento.Nome</option>
                                    }
                                </select>
                            </span>
                            <label class="margin-t5">
                                <strong>&nbsp;Valor recebido:&nbsp;</strong>
                            </label>
                            <input class="form-control text-center wd-80" id="valorRecebidoFormaPagamento1" maxlength="30" type="text">
                            <label class="margin-t5">
                                <strong>&nbsp;Troco:&nbsp;</strong>
                            </label>
                            <input class="form-control text-center wd-80" id="trocoFormaPagamento1" maxlength="30" type="text" value="R$ 0,00" disabled>
                        </div>
                        <div class="col-12" style="display: flex; margin-top:10px">
                            <span>
                                <select class="form-control" id="formaPagamento2" disabled>
                                    @foreach (var formaPagamento in Model.TipoPGs)
                                    {
                                        <option class="form-control" value="@formaPagamento.Id">@formaPagamento.Nome</option>
                                    }
                                </select>
                            </span>
                            <label class="margin-t5" id="trocoOuSaldo">
                                <strong>&nbsp;Valor recebido:&nbsp;</strong>
                            </label>
                            <input class="form-control text-center wd-80" id="valorRecebidoFormaPagamento2" maxlength="30" value="R$ 0,00" disabled>
                        </div>
                    </form>
                </div>
                <div class="clearfix"></div>
                <div class="col-sm-12">
                    <button type="button" class="mb-10 mr-10 btn btn-finalizar float-right" style=" margin-top: 10px; margin-right: 20px;" id="finalizarVenda">Finalizar Venda</button>
                    <button type="button" class="mb-10 mr-10 btn btn-remove float-right" style=" margin-right: 15px; margin-top: 10px;">Cancelar</button>
                </div>
                <br>
            </div>
        </div>
    </div>
</body>
@section scripts {
    <script type="text/javascript">

        var contadorId = 0;

        $("#adicionarProduto").click(() => {
            let idProduto = $("#cmbProdutos").val();
            let produto = callActionGet('produto', 'Get', { idProduto: idProduto })
            adicionaProdutoNaLista(produto)
        })

        $("#valorRecebidoFormaPagamento1").change(() => {
            adicionaOuRemoveSegundaFormaPagamentoAtualizandoTroco();
        })

        $("#valorRecebidoFormaPagamento2").change(() => {
            adicionaOuRemoveSegundaFormaPagamentoAtualizandoTroco();
        })

        $("#finalizarVenda").click(() => {
            if (validaCamposParaFinalizar())
                finalizaVenda();
        })

        function validaCamposParaFinalizar() {
            if (valorTotalPedido() <= 0) {
                bootbox.alert(`O valor da venda deve ser maior que R$ 0,00.`);
                return false;
            }
            if ($(`#idVendedor`).val() == `0`) {
                bootbox.alert(`Selecione o vendedor para finalizar a venda.`);
                return false;
            }
            if ($(`#IdCliente`).val() == `0`) {
                bootbox.alert(`Selecione o cliente para finalizar a venda.`);
                return false;
            }
            if (quantidadeAtualItensNaLista() <= 0) {
                bootbox.alert(`Adicione produtos na lista para finalizar a venda.`);
                return false;
            }
            return true;
        }

        function finalizaVenda() {
            let pedido = {};
            pedido.IdVendedor = $(`#idVendedor`).val();
            pedido.Observacao = $(`#obsevacaoPedido`).text();
            pedido.IdCliente = $(`#IdCliente`).val();

            pedido.FormaPGs = [];

            let FormaPGVM = {};
            FormaPGVM.TipoPGVM = {};
            FormaPGVM.TipoPGVM.Id = $(`#formaPagamento1`).val();
            FormaPGVM.TipoPGVM.Valor = $(`#valorRecebidoFormaPagamento1`).val();
            pedido.FormaPGs.push(FormaPGVM)

            if (!valorRecebidoA() === valorTotalPedido()) {
                FormaPGVM = {};
                FormaPGVM.TipoPGVM = {};
                FormaPGVM.TipoPGVM.Id = $(`#formaPagamento2`).val();
                FormaPGVM.TipoPGVM.Valor = $(`#valorRecebidoFormaPagamento2`).val();
                pedido.FormaPGs.push(FormaPGVM)
            }

            pedido.ItemPedidosVM = [];


            $('#listaProdutos > tbody  > tr').each(function () {
                let contadorId = $(this).attr('id');
            });

        //            public int IdProduto { get; set; }
        //public string Observacao { get; set; }
        //public int Quantidade { get; set; }
        //public double ValorUnitario { get; set; }
        //public double Desconto { get; set; }



        }

        function adicionaProdutoNaLista(produto) {
            let tr = `<tr id="${contadorId}">
                        <td class="tb-style text-center" width="5%" id="${produto.IdProduto}">${produto.CodProduto}</td>
                        <td class="tb-style" width="30%">${produto.NomeProduto}</td>
                        <td class="tb-style" width="30%">
                            <div class="form-group">
                                <textarea class="form-control" rows="1"></textarea>
                            </div>
                        </td>
                        <td class="tb-style" width="10%">
                            <input class="qtdem btn" type="button" value="-" onclick="decrementaQuantidade(${contadorId});" />
                            <input id="quantidade_${contadorId}" class="qtde" type="text" value="1" onchange="calculaValorTotalProdutos(${contadorId});" disabled/>
                            <input class="qtdema btn" type="button" value="+" onclick="incrementaQuantidade(${contadorId});" />
                        </td>
                        <td class="tb-style" width="3%"><input id="valor_${contadorId}" data-inputmask="'alias': 'numeric', 'groupSeparator': ',', 'digits': 2, 'digitsOptional': false, 'prefix': 'R$ ', 'placeholder': '0'"class="wd-100 form-control" type="text" value="${produto.ValorProduto}" onchange="calculaValorTotalProdutos(${contadorId});"/></td>
                        <td class="tb-style" width="3%"><input id="desconto_${contadorId}" class="wd-100 form-control" type="text" value="00,00" onchange="calculaValorTotalProdutos(${contadorId});"/></td>
                        <td id="total_${contadorId}" class="tb-style" width="4%">${produto.ValorProduto}</td>
                        <td class="tb-style" width="10%"><button type="button" class="btn btn-remove" onclick="removeProdutoDaLista(${contadorId});">Remover</button></td>
                    </tr>`;

            $("#listaProdutos tbody").append(tr);

            atualizaTotalPedido();
            adicionaOuRemoveSegundaFormaPagamentoAtualizandoTroco();
            contadorId++;
        }

        function atualizaTotalPedido() {
            let valorTotalDescontos = 0;
            let valorTotalPedido = 0;
            $('#listaProdutos > tbody  > tr').each(function () {
                let contador = $(this).attr('id');
                let quantidadeAtual = quantidadeAtualProdutosNaLista(contador);
                let valorDesconto = valorDescontoUnitario(contador);

                let totalDescontoItemAtual = valorDesconto * quantidadeAtual;
                valorTotalDescontos += totalDescontoItemAtual;

                let totalProduto = valorTotalProduto(contador);
                valorTotalPedido += totalProduto;
            });
            $("#valorTotalPedido").val(valorTotalPedido.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' }));
            $("#valorTotalDescontos").val(valorTotalDescontos.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' }));

            $("#valorRecebidoFormaPagamento1").val(valorTotalPedido.toFixed(2));
        }

        function calculaValorTotalProdutos(contador) {
            let quantidadeAtual = quantidadeAtualProdutosNaLista(contador);
            let valorUnitario = valorUnitarioProduto(contador);
            let valorDesconto = valorDescontoUnitario(contador);
            let valorTotal = (valorUnitario - valorDesconto) * quantidadeAtual;
            $(`#total_${contador}`).text(valorTotal.toFixed(2));
            atualizaTotalPedido();
            adicionaOuRemoveSegundaFormaPagamentoAtualizandoTroco();
        }

        function decrementaQuantidade(contador) {
            if (produtoNaLista(contador)) {
                let quantidadeAtual = quantidadeAtualProdutosNaLista(contador);
                if (quantidadeAtual > 1) {
                    $(`#quantidade_${contador}`).val(--quantidadeAtual);
                    calculaValorTotalProdutos(contador);
                }
            }
        }

        function incrementaQuantidade(contador) {
            if (produtoNaLista(contador)) {
                let quantidadeAtual = quantidadeAtualProdutosNaLista(contador);
                $(`#quantidade_${contador}`).val(++quantidadeAtual);
                calculaValorTotalProdutos(contador);
            }
        }

        function quantidadeAtualItensNaLista() {
            return $('#listaProdutos tbody tr').length;
        }

        function quantidadeAtualProdutosNaLista(contador) {
            return parseInt($(`#listaProdutos tbody tr`).find(`#quantidade_${contador}`).val());
        }

        function valorUnitarioProduto(contador) {
            return parseFloat($(`#listaProdutos tbody tr`).find(`#valor_${contador}`).val());
        }

        function valorDescontoUnitario(contador) {
            return parseFloat($(`#listaProdutos tbody tr`).find(`#desconto_${contador}`).val());
        }

        function valorTotalProduto(contador) {
            return parseFloat($(`#listaProdutos tbody tr`).find(`#total_${contador}`).text());
        }

        function removeProdutoDaLista(contador) {
            if (produtoNaLista(contador)) {
                $("#listaProdutos tbody").find(`#${contador}`).remove();
                atualizaTotalPedido();
                adicionaOuRemoveSegundaFormaPagamentoAtualizandoTroco();
            }
        }

        function produtoNaLista(contador) {
            return $('#listaProdutos').find(`#${contador}`).length > 0;
        }

        function valorTotalPedido() {
            return parseFloat($("#valorTotalPedido").val().replace('R$', '').trim().replace(',', '.'));
        }

        function calculaTroco() {
            return (valorRecebidoA() + valorRecebidoB()) - valorTotalPedido();
        }

        //function atualizaValorCampoTroco() {
        //    let troco = calculaTroco();
        //    if (troco < 0)
        //        $("#trocoFormaPagamento1").val(troco.toFixed(2).replace('-', ''));
        //    else
        //        $("#trocoFormaPagamento1").val(troco.toFixed(2))
        //}

        function valorRecebidoA() {
            return $("#valorRecebidoFormaPagamento1").val() == '' || NaN || undefined ? 0 : parseFloat($("#valorRecebidoFormaPagamento1").val())
        }

        function valorRecebidoB() {
            return $("#valorRecebidoFormaPagamento2").val() == '' || NaN || undefined ? 0 : parseFloat($("#valorRecebidoFormaPagamento2").val())
        }

        function valorTroco() {
            return $("#valorRecebidoFormaPagamento2").val() == '' || NaN || undefined ? 0 : parseFloat($("#trocoFormaPagamento1").val())
        }

        function desabilitaSegundoPagamento() {
            $("#formaPagamento2").prop("disabled", true);
            $("#valorRecebidoFormaPagamento2").prop("disabled", true);
            $("#valorRecebidoFormaPagamento2").val((0).toFixed(2));
        }

        function adicionaOuRemoveSegundaFormaPagamentoAtualizandoTroco() {

            if (valorRecebidoA() === valorTotalPedido()) {
                $("#trocoFormaPagamento1").val((0).toFixed(2))
                desabilitaSegundoPagamento();
                return;
            }
            else if ((valorRecebidoA() + valorRecebidoB()) === valorTotalPedido()) {
                $("#trocoFormaPagamento1").val((0).toFixed(2))
                return;
            }

            let troco = calculaTroco();
            if (troco > 0) {
                $("#formaPagamento2").prop("disabled", false);
                $("#valorRecebidoFormaPagamento2").prop("disabled", false);
                $("#trocoFormaPagamento1").val(troco.toFixed(2));

            }
            else if (troco === 0) {
                desabilitaSegundoPagamento();
            }
            else if (troco < 0) {
                $("#formaPagamento2").prop("disabled", false);
                $("#valorRecebidoFormaPagamento2").prop("disabled", false);
                $("#valorRecebidoFormaPagamento2").val((valorTotalPedido() - valorRecebidoA()).toFixed(2));
            }
            //atualizaValorCampoTroco();
        }
    </script>
}
